name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  # Quick validation for pull requests
  pr-validation:
    name: üîç PR Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for better diffs
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check TypeScript
        run: npx tsc --noEmit

      - name: Run linting with auto-fix
        run: |
          npm run lint -- --fix
          # Check if there are any remaining lint errors
          npm run lint

      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          NODE_ENV: test

      - name: Build check
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check bundle size
        run: |
          npm install -g bundlesize
          bundlesize

  # Code quality analysis
  code-quality:
    name: üìä Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run test coverage
        run: npm test -- --coverage --watchAll=false
        env:
          NODE_ENV: test

      - name: Comment PR with coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

  # Security check for PRs
  security-check:
    name: üîí Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: |
          # Check for high/critical vulnerabilities
          npm audit --audit-level high
          
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD